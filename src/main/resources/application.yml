spring:
  config:
    activate.on-profile: local
    import: optional:file:.env.local[.properties]
  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    generate-ddl: true
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USER}
    password: ${MAIL_PW}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
  data:
    redis:
      host: localhost
      port: 6379
  jwt:
    access-expiration-time: ${JWT_ACCESS_EXPIRATION_TIME}
    refresh-expiration-time : ${JWT_REFRESH_EXPIRATION_TIME}
    prefix: ${JWT_PREFIX}
    secret-key: ${JWT_SECRET_KEY}
  servlet:
    multipart:
      max-file-size: 20MB
      max-request-size: 60MB

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-name: kakao
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/kakao
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            client-authentication-method: client_secret_post
            scope: account_email
          naver:
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/naver
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            scope: email
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope: email
            redirect-uri: http://localhost:8080/login/oauth2/code/google
            authorization-grant-type: authorization_code
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            user-name-attribute: id
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: email

logging:
  level:
    org:
      sesac:
        slopedbe: INFO
cloud:
  aws:
    stack:
      auto: false
    s3:
      bucket: ${S3_BUCKET}
    credentials:
      accessKey: ${S3_ACCESSKEY}
      secretKey: ${S3_SECRETKEY}
    region:
      static: ${S3_REGION_STATIC}
roadReportDir: ${ROAD_REPORT_DIR}
file:
  max-size: ${S3_FILE_MAX_SIZE}  # 20MB

openai:
  secret-key: ${OPENAI_API_KEY}

---

spring:
  config:
    activate.on-profile: prod
    import: optional:file:.env[.properties]
  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    generate-ddl: true
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USER}
    password: ${MAIL_PW}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
  data:
    redis:
      host: ${DB_HOST}
      port: 6379
  jwt:
    access-expiration-time: ${JWT_ACCESS_EXPIRATION_TIME}
    refresh-expiration-time : ${JWT_REFRESH_EXPIRATION_TIME}
    prefix: ${JWT_PREFIX}
    secret-key: ${JWT_SECRET_KEY}
  servlet:
    multipart:
      max-file-size: 20MB
      max-request-size: 60MB

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-name: kakao
            authorization-grant-type: authorization_code
            redirect-uri: https://api.togetheroad.me/login/oauth2/code/kakao
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            client-authentication-method: client_secret_post
            scope: account_email
          naver:
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: https://api.togetheroad.me/login/oauth2/code/naver
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            scope: email
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope: email
            redirect-uri: https://api.togetheroad.me/login/oauth2/code/google
            authorization-grant-type: authorization_code
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            user-name-attribute: id
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: email

logging:
  file:
    name: /home/opc/sloped/sloped-be/application-test.log
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  level:
    root: INFO
    org.springframework.web: DEBUG
    com.yourpackage: DEBUG
  logback:
    rollingpolicy:
      file-name-pattern: ${LOG_FILE}.%d{yyyy-MM-dd_HH-mm}.%i.log
      clean-history-on-start: false
      max-file-size: 10MB
      total-size-cap: 1GB
      max-history: 30
    rolling-interval: 5m
cloud:
  aws:
    stack:
      auto: false
    s3:
      bucket: ${S3_BUCKET}
    credentials:
      accessKey: ${S3_ACCESSKEY}
      secretKey: ${S3_SECRETKEY}
    region:
      static: ${S3_REGION_STATIC}
roadReportDir: ${ROAD_REPORT_DIR}
file:
  max-size: ${S3_FILE_MAX_SIZE}  # 20MB

openai:
  secret-key: ${OPENAI_API_KEY}